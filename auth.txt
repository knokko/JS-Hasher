REGISTER PROTOCOL:

-The client will send a register request to the server containing the username, test payload, serverStartSeed, clientSessionSeed
and serverSessionSeed. The server stores them all. The test payload is
the sequence of bytes that will be generated by a pseudo random number generator with the clientStartSeed as seed.

-The server will either allow or deny the request and send the result back to the client. The client should now start the login
protocol, but that is not absolutely required.

LOGIN PROTOCOL:

-The client sends a request to log in, the request contains the username he would like to log in for. The request also contains
half of the seed that should be used to encrypt the test payload later. That half seed should be random.

-The server can refuse the login if there is no account with the given username or if it is already logged in. It will send the
reason immediathly if so. If the server allows the login, it will send the client the salt and half of the seed that it should 
use to encrypt the clientStartSeed. That half seed should be random.

-The client encrypts the clientStartSeed using the serverStartSeed and the half seed it received from the server. It sends the
encrypted clientStartSeed to the server.

-The server decrypts the clientStartSeed and uses it to create a pseudo random number generator. If the bytes generated by it
match the test payload, it knows that the client is the owner of the account. 
If it does not match, it will let the client
know that the password was incorrect. The server will encrypt the test payload and 2 random half seeds for the session randoms 
using the serverStartSeed and the half of the seed the client requested and send it to the client.

-The client decrypts the test payload and the half seeds and checks if the test payload is the real test payload. 
If it is not, the client will terminate the connection and warn the user that the server connection was corrupted.
If the test payload is correct, the connection is confirmed.

Both sides will use the session seeds and the random half seeds to create pseudo random number generators for encrypting and
decrypting each others messages.